name: "vprofile IAC"
on:
    push:
        branches:
            - main
            - stage
        paths: 
            - terraform/**
    pull_request: 
        branches: 
            - main
        paths:
            - terraform/**

env: 
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
    AWS_REGION: us-east-1
    EKS_ClUSTER: vprofile-eks

jobs:
    terraform:
        name: "Apply Terraform changes"
        runs-on: ubuntu-latest
        defaults: 
            run: 
                shell: bash
                working-directory: ./terraform
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4
            
            - name: Setup Terraform with specified version on the runner
              uses: hashicorp/setup-terraform@v3

            - name: Terraform init
              id: init
              run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

            - name: Terraform format
              id: fmt
              run: terraform fmt -check

            - name: terraform validate
              id: validate
              run: terraform validate

            - name: terraform plan
              id: plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true

            - name: terraform plan status
              if: steps.plan.outcome == 'failure'
              run: exit 1
            
            - name: terraform apply
              id: apple
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false -parrallelism=1 planfile
            
            - name: configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{env.AWS_REGION}}
            
            - name: Get Kube config file
              id: getconfig
              if: steps.apple.outcome == 'success'
              run: aws eks update-kubeconfig --region ${{ env.AWS_REGION}} --name ${{env.EKS_ClUSTER}}

            - name: install ingress controller
              if: steps.apple.outcome == 'success' && steps.getconfig.outcome == 'success'
              run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
